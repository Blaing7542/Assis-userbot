import random
import asyncio
import time
import tgcrypto
import pyrogram
from pyrogram import Client, filters
from pytube import YouTube

api_id = ''
api_hash = ''  # Api_id –∏ Api_hash –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–∞ —Å–∞–π—Ç–µ https://my.telegram.org/apps.

app = Client("my_bot", api_id=api_id, api_hash=api_hash)
userid_telegram = 123456789  # –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∞—à ID –∞–∫–∫–∞—É–Ω—Ç–∞.
blacklist = []

open("bldb.txt", "a").close()

with open("bldb.txt", "r") as file:
    for line in file:
        user_id = int(line.strip())
        blacklist.append(user_id)

@app.on_message(filters.command("help", prefixes="."))
async def help_command(_, message):
    await message.edit_text("**–ö–æ–º–∞–Ω–¥—ã:**\n`.bull` - –±—É–ª–ª–∏–Ω–≥\n`.info` - –∏–Ω—Ñ–æ –æ —é–±\n`.doubletext` - —É–¥–≤–∞–∏–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç. –ø—Ä–∏–º–µ—Ä: *–ø–ø—Ä—Ä–∏–∏–≤–≤–µ–µ—Ç—Ç!*\n`.ping` - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–∏–Ω–≥ —é–±\n`.caz` - –¥–µ–ª–∞–µ—Ç —Å—Ç–∞–≤–∫—É –Ω–∞ —á—Ç–æ-—É–≥–æ–¥–Ω–æ. –ø—Ä–∏–º–µ—Ä: *.caz 2 –¥–æ–ª–ª–∞—Ä–∞*\n`.downvid` - —Å–∫–∞—á–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ —Å YouTube –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n`.addbl` - –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫. –û–Ω –Ω–µ —Å–º–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–∞–º–∏ –≤–∞—à–µ–≥–æ —é–±.\n`.delbl` - —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á—ë—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.\n`.animtext` - –∞–Ω–∏–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç.\n`.ab` - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –±—É–ª–ª–∏–Ω–≥\n`delab` - —É–±—Ä–∞—Ç—å –∏–∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –±—É–ª–ª–∞.\n`.who` - –≤—ã–±–∏—Ä–∞–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ —á–µ–ª–∞, –∏ –ø–∏—à–µ—Ç –∫—Ç–æ –æ–Ω.")

@app.on_message(filters.command("bull", prefixes="."))
async def bull_command(_, message):
    if message.from_user.id in blacklist:
        await message.reply_text("–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —á—ë—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ.")
        return

    bull_variants = [
        "–°–û–°–ò –Ø–ô–¶–ê",
        "–Ø —Ç–≤–æ—é –º–∞–º—É –±—É–º –±—É–º",
        "–¢–µ—Ä–ø–∏–ª—É –æ–±–æ—Å–∞–Ω–Ω–æ–≥–æ –Ω–µ —Å–ø—Ä–∞—à–∏–≤–∞–ª–∏",
        "–ú–∞–º–µ –±—É–¥–µ—à—å —Ç–∞–∫ –≥–æ–≤–æ—Ä–∏—Ç—å",
        "–ü–æ—à—ë–ª –Ω–∞—Ö—É–π",
        "–°–ª—ã—à—å —Ç—ã, —á–µ—Ä–∫–∞—à –æ–±–æ—Å–∞–Ω–Ω—ã–π, –º–∞–º–∫—É —Å–≤–æ—é –ø—Ä–æ–≤–µ—Ä–∏–ª? –û–Ω–∞ –≤ –º–æ–π —Å–ø–µ—Ä–º–µ)",
        "–ü–æ–º–Ω–∏—à—å, —Ç–µ–±–µ –¥–µ–≤—É—à–∫–∞ –Ω–µ –æ—Ç–≤–µ—á–∞–ª–∞ —Ü–µ–ª—ã–π –º–µ—Å—è—Ü? –û–Ω–∞ –≤—Å—ë –≤—Ä–µ–º—è —Å–æ—Å–∞–ª–∞ –º–æ–π —Ö—É–π, –∏ –º—ã –µ–±–∞–ª–∏—Å—å —Å –Ω–µ–π)",
        "–¢—ã —á—ë –∫–∞–∫ —Ç–≤–æ—è –º–∞—Ç—å? –û–Ω–∞ —Ö–æ—Ç—å-–±—ã –∏–∑–º–µ–Ω–∏–ª–∞—Å—å, –∞ —Ç—ã –∑–∞ –Ω–µ–π –ø–æ–≤—Ç–æ—Ä—è–µ—à—å - —Ö—É–π —Å–æ—Å—ë—à—å))",
        "–ß—É–º–∞ –≤–æ–ª–æ—Å–∞—Ç–∞—è, —Ç–µ–±—è –º–∞–º–∞ –≤ –¥–µ—Ç—Å—Ç–≤–µ –±–∏–ª–∞, —á—Ç–æ —Ç—ã —Ç–∞–∫–æ–π –∑–ª–æ–π?",
        "–ú—ã —Ç–≤–æ—é –º–∞–º—É –µ–±–∞–ª–∏ –≤—Å–µ–π –≥—Ä—É–ø–ø–æ–π, —Ä–∞–¥—É–π—Å—è))",
        "–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è, –∫–æ–≥–¥–∞ —Ç–µ–±—è —Å–ø—Ä–æ—Å–∏–ª–∏ *–≤–∏–ª–∫–æ–π –≤ –≥–ª–∞–∑ –∏–ª–∏ –≤ –ø–æ–ø—É —Ä–∞–∑?*, —Ç—ã –≤—ã–±—Ä–∞–ª –≤—Ç–æ—Ä–æ–µ))",
        "–ú—ã —Å —Ç–≤–æ–∏–º –æ—Ç—Ü–æ–º –º–∞–º—É –µ–±–∞–ª–∏. –û–Ω–∞ —Ç–∞–∫ –ø—Ä–∏—è—Ç–Ω–æ —Å–æ—Å—ë—Ç))",
        "–¢—ã –±–ª—è—Ç—å, —Å—ã–Ω —Ñ–µ—Ä–º–µ—Ä–∞, —Ç—ã –∫–∞–∫ —Å –æ—Ç—á–∏–º–æ–º —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞–µ—à—å?",
        "–ú–Ω–µ —Ç–≤–æ–π –ø–∞–ø–∞ —Å–∫–∞–∑–∞–ª, —á—Ç–æ –∫–æ–≥–¥–∞ –æ–Ω–∏ –µ–±–∞–ª–∏—Å—å, —Ç–æ –ø—Ä–µ–∑–∏–∫ –ø–æ—Ä–≤–∞–ª—Å—è))",
        "–ê —á–µ–≥–æ —Ç—ã –µ—â—ë –≤ —Å–µ—Ç–∏? –ú–∞–º–∞ –∂–µ —Å–∫–∞–∑–∞–ª–∞ –≤—ã–∫–ª—é—á–∞—Ç—å",
        "–≠–π —Ç—ã, —à–ª—é—Ö–∞, –ø–æ–ª–∏—Ä–æ–≤–∞—Ç—å —è–π—Ü–∞ –∫–æ–≥–¥–∞ –±—É–¥–µ—à—å?",
        "–ü–∏—Å—é–Ω—á–∏–∫ –µ—â—ë –Ω–µ –¥–æ—Ä–æ—Å –¥–æ —Ç–∞–∫–∏—Ö –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–π",
        "–ö–æ–≥–¥–∞ —Ç—ã —É–∂–µ –≤—Å–ø–æ–º–Ω–∏—à—å, —á—Ç–æ –º–Ω–µ —Ö—É–π —Å–æ—Å–∞–ª?",
        "–¢—ã –º–æ–π —Å–µ–∫—Å —Ä–∞–±, –∞ —è —Ç–≤–æ–π –≤–ª–∞–¥–µ–ª–µ—Ü. –ë—ã—Å—Ç—Ä–æ —Å–æ—Å–∏ –º–Ω–µ —Ö—É–π!",
        "–ñ–¥–∏ —Å–≤–æ–µ–≥–æ –æ—Ç—á–∏–º–∞ –¥–æ–º–∞. –û–Ω —Ö–æ—á–µ—Ç —Ç–µ–±—è –≤—ã–µ–±–∞—Ç—å –≤ —Ä–æ—Ç))",
        "–ü–æ—à—ë–ª –Ω–∞—Ö—É–π —á–µ—Ä–∫–∞—à –µ–±–∞–Ω–Ω—ã–π",
        "–î–∞—É–Ω, –∏–¥–∏ –≤—Å–∫—Ä–æ–π—Å—è",
        "–ê–ª—å—Ç—É—à–∫–∞ –µ–±–∞–Ω–Ω–∞—è, –∏–¥–∏ –¥—Ä–æ—á–∏ –∫-–ø–æ–ø–µ—Ä–∞–º",
        "–ë–ª—è, —è —Ç–≤–æ—é –º–∞—Ç—å –∫–∞–º–∞–∑–æ–º –ø–µ—Ä–µ—Ö—É—è—Ä–∏–ª",
        "—Ç—ã –∞—Ö—É–µ–ª —á–º–æ –µ–±–∞–Ω–æ–µ",
        "–ò–¥–∏ –Ω–∞—Ö—É–π –µ–±–ª–æ —Ç—É–ø–æ–µ —Ç–µ–±—è –≤ –ø–æ–¥–≤–æ—Ä–æ—Ç–Ω–µ —è –∏–∑–Ω–∞—Å–∏–ª—É—é",
        "–¢–í–û–ô –ü–ò–ó–î–ï–ñ –ë–ï–ó –î–û–ö–ê–ó–ê–¢–ï–õ–¨–°–¢–í –ù–ï –ò–ú–ï–ï–¢ –í–ï–°–ê",
        "–ü–û–®–Å–õ –ù–ê–•–£–ô –°–´–ù –®–õ–Æ–•–ò. –¢–´ –ö–¢–û –¢–ê–ö–û–ô –ë–õ–Ø–¢–¨ –ß–¢–û–ë–´ –ü–ò–°–ê–¢–¨ –ü–†–û –°–í–û–Æ –ú–ê–¢–¨? –û–ù–ê –ï–ë–ê–ù–ù–ê–Ø –®–õ–Æ–•–ê, –ò –í–°–Å –≠–¢–û –ó–ù–ê–Æ–¢",
        "–¢–í–û–Ø –ú–ê–¢–¨ –ò –û–¢–ï–¶ –ü–†–û–°–ò–õ–ò –ü–ï–†–ï–î–ê–¢–¨ –ß–¢–û –¢–´ –ï–ë–ê–ù–ê–¢",
        "–í–´ –í–°–ï –ö–û–ù–ß–ï–ù–ù–´–ï –î–û–õ–ë–û–ï–ë–´",
        "–ø–æ–¥–∫–∏–¥—ã—à –µ–±–∞–Ω—ã–π –Ω–∞–≤–µ—Ä–Ω–∏ –≥–æ–≤–Ω–∏—â–∞ –¥–∞ –ø–æ–±–æ–ª—å—à–µ",
        "–ø–æ—à–ª–∞ –Ω–∞—Ö—É–π –∂–µ–Ω—â–∏–Ω–∞ –µ–±–∞–Ω–∞—è —Å–¥–æ—Ö–Ω–∏ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É —É–µ–±–∞–Ω",
        "—Ä–æ—Ç –∑–∞–∫—Ä–æ–π –≥–Ω–∏–¥–∞ –æ–±–æ—Å—Å–∞–Ω–∞—è –ø—Ä–æ –ø–ª–∞—á –∏ —Ö—É–∏ —Ç–æ–ª—å–∫–æ –∏ –≥–æ–≤–æ—Ä–∏—Ç —É–µ–±–∞–Ω –∫–æ–Ω—á–µ–Ω—ã–π",
        "–±–ª—è —Ç—ã –∫–∞–∫ –±—É–¥—Ç–æ —É –∑–µ—Ä–∫–∞–ª–∞ —Å—Ç–æ–∏—à—å - —Ç—É–ø–æ —Å—Ç—Ä–µ–ª–∫–∏ –º–µ—Ç–∞–µ—à—å",
        "–í —Å–æ—Ü–∏—É–º–µ –º–µ–Ω—è —Å—á–∏—Ç–∞—é—Ç –≥–µ–Ω–∏–µ–º –∞ —Ç–µ–±—è –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞—é—Ç –∫–∞–∫ –∑–∞ –ª–æ—Ö–∞ –∫–æ—Ç–æ—Ä—ã–π –¥–æ–µ–¥–∞–µ—Ç –∑–∞ –º–Ω–æ–π",
        "–ò–¥–∏ –Ω–∞—Ö—É–π –º–æ—ë –ø–æ–∫–æ–ª–µ–Ω–∏–µ —Å–∞–º–æ–µ —É–º–Ω–æ–µ –∞ —Ç—ã —Ç—É–ø–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≤–∏–¥—É–π –º–æ–ª—á–∏",
        "–ò–¥–∏ –Ω–∞—Ö—É–π –∞–ª—å—Ç—É—à–∫–∞ –∏–¥–∏ –±–ª—è—Ç—å —É–º–æ–π—Å—è",
        "–¢—ã —Ä–∞–± —ç—Ç–æ–≥–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞ —Ç–µ–ø–µ—Ä—å –∂–∏–≤–æ –∑–∞ —Ä–∞–±–æ—Ç—É",
        "–ü–æ—Å–º–µ—è–ª–∏—Å—å –∞ —Ç–µ–ø–µ—Ä—å –≤ –ø–æ–ª–µ –ø–∞—Ö–∞—Ç—å –±—É–¥–µ—à—å",
        "–£ —Ç–µ–±—è –Ω–µ—Ç —Ö—É—è —Ç—ã —Ä–∞–± —Ç—É–ø–æ–π —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ —Ç–µ–±–µ –æ–±—ä—è—Å–Ω—è—Ç—å —á–º–æ –µ–±–ª–∏–≤–æ–µ",
        "–ú–Ω–µ–Ω–∏–µ —Ç–∞–¥–∂–∏–∫–∞ –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è",
        "–ê—Ö–∞—Ö—Ö–∞–∞—Ö –µ–±–∞—Ç—å —Ç—ã –Ω–∏—â –∫–ª–æ—É–Ω —á–º–æ –µ–±–ª–∏–≤–æ–µ –Ω–∞–¥–µ—é—Å—å –≤ –ø–æ–¥–≤–æ—Ä–æ—Ç–Ω–µ —Ç–µ–±—è —Ç–∞–¥–∂–∏–∫–∏ –≤—ã–µ–±—É—Ç",
        "—á–º–æ –º–æ–ª—á–∞—Ç—å –Ω–∞—Ö—É–π"
    ]

    await message.edit_text(random.choice(bull_variants))

@app.on_message(filters.command("info", prefixes="."))
async def info_command(_, message):
    start_time = time.time()
    await message.delete()
    end_time = time.time()
    ping_time = round((end_time - start_time) * 1000, 1)
    await app.send_photo(
        chat_id=message.chat.id,
        photo="https://user-images.githubusercontent.com/127663348/259819077-e4efea31-d07d-4d82-88c7-ba86fea5a36e.jpg",
        caption=f"**‚ú®Assis by Blaing**\n__üîßVersion: 1.3__\nSource: [https://github.com/Blaing7542/Assis-userbot](https://github.com/Blaing7542/Assis-userbot)\n**Version for user‚ù§**\n**Ping: {ping_time}ms**"
    )

@app.on_message(filters.command("doubletext", prefixes="."))
async def animtext_command(_, message):
    text = message.text.split(".doubletext ", 1)[1]
    animated_text = ""
    for char in text:
        animated_text += char + char
    await message.edit_text(animated_text)

@app.on_message(filters.command("caz", prefixes="."))
async def caz_command(_, message):
    await asyncio.sleep(4)
    bet = message.text.split(".caz ", 1)[1]
    try:
        bet_amount, bet_text = bet.split(maxsplit=1)
        bet_amount = int(bet_amount)
        if bet_amount <= 0:
            await message.reply_text("–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º!")
            return
    except (ValueError, IndexError):
        await message.reply_text("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞!")
        return

    result = random.choice([0, 1])
    if result == 0:
        loss_amount = bet_amount
        await message.reply_text(f"–ü—Ä–æ–∏–≥—Ä—ã—à! –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {loss_amount} {bet_text}")
    else:
        win_amount = bet_amount * 2
        await message.reply_text(f"–í—ã–∏–≥—Ä—ã—à! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {win_amount} {bet_text}")

@app.on_message(filters.command("addbl", prefixes="."))
async def add_blacklist_command(_, message):
    if message.from_user.id == userid_telegram:
        user_id = message.reply_to_message.from_user.id
        if user_id not in blacklist:
            blacklist.append(user_id)
            with open("bldb.txt", "a") as file:
                file.write(str(user_id) + "\n")
            await message.reply_text("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫. –¢–µ–ø–µ—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –≤–∞—à–µ–≥–æ —é–±.")
        else:
            await message.reply_text("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —á—ë—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ.")
    else:
        await message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")

@app.on_message(filters.command("delbl", prefixes="."))
async def remove_blacklist_command(_, message):
    if message.from_user.id == userid_telegram:
        user_id = message.reply_to_message.from_user.id
        if user_id in blacklist:
            blacklist.remove(user_id)
            with open("bldb.txt", "w") as file:
                for id in blacklist:
                    file.write(str(id) + "\n")
            await message.reply_text("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω –∏–∑ —á—ë—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.")
        else:
            await message.reply_text("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —á—ë—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ.")
    else:
        await message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")

@app.on_message(filters.command("animtext", prefixes='.') & filters.me)
async def animtext_command(_, message):
    input_text = message.text.split(".animtext ", maxsplit=1)[1]
    temp_text = input_text
    edited_text = ""
    typing_symbol = "‚ñà"

    while edited_text != input_text:
        try:
            await message.edit(edited_text + typing_symbol)
            time.sleep(0.1)
            edited_text = edited_text + temp_text[0]
            temp_text = temp_text[1:]
            await message.edit(edited_text)
            time.sleep(0.1)
        except FloodWait:
            print("–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Å–µ–∫—É–Ω–¥—É. –ü–æ–¥–æ–∂–¥–∏—Ç–µ...")

ab_variants = [
        "–°–û–°–ò –Ø–ô–¶–ê",
        "–Ø —Ç–≤–æ—é –º–∞–º—É –±—É–º –±—É–º",
        "–¢–µ—Ä–ø–∏–ª—É –æ–±–æ—Å–∞–Ω–Ω–æ–≥–æ –Ω–µ —Å–ø—Ä–∞—à–∏–≤–∞–ª–∏",
        "–ú–∞–º–µ –±—É–¥–µ—à—å —Ç–∞–∫ –≥–æ–≤–æ—Ä–∏—Ç—å",
        "–ü–æ—à—ë–ª –Ω–∞—Ö—É–π",
        "–°–ª—ã—à—å —Ç—ã, —á–µ—Ä–∫–∞—à –æ–±–æ—Å–∞–Ω–Ω—ã–π, –º–∞–º–∫—É —Å–≤–æ—é –ø—Ä–æ–≤–µ—Ä–∏–ª? –û–Ω–∞ –≤ –º–æ–π —Å–ø–µ—Ä–º–µ)",
        "–ü–æ–º–Ω–∏—à—å, —Ç–µ–±–µ –¥–µ–≤—É—à–∫–∞ –Ω–µ –æ—Ç–≤–µ—á–∞–ª–∞ —Ü–µ–ª—ã–π –º–µ—Å—è—Ü? –û–Ω–∞ –≤—Å—ë –≤—Ä–µ–º—è —Å–æ—Å–∞–ª–∞ –º–æ–π —Ö—É–π, –∏ –º—ã –µ–±–∞–ª–∏—Å—å —Å –Ω–µ–π)",
        "–¢—ã —á—ë –∫–∞–∫ —Ç–≤–æ—è –º–∞—Ç—å? –û–Ω–∞ —Ö–æ—Ç—å-–±—ã –∏–∑–º–µ–Ω–∏–ª–∞—Å—å, –∞ —Ç—ã –∑–∞ –Ω–µ–π –ø–æ–≤—Ç–æ—Ä—è–µ—à—å - —Ö—É–π —Å–æ—Å—ë—à—å))",
        "–ß—É–º–∞ –≤–æ–ª–æ—Å–∞—Ç–∞—è, —Ç–µ–±—è –º–∞–º–∞ –≤ –¥–µ—Ç—Å—Ç–≤–µ –±–∏–ª–∞, —á—Ç–æ —Ç—ã —Ç–∞–∫–æ–π –∑–ª–æ–π?",
        "–ú—ã —Ç–≤–æ—é –º–∞–º—É –µ–±–∞–ª–∏ –≤—Å–µ–π –≥—Ä—É–ø–ø–æ–π, —Ä–∞–¥—É–π—Å—è))",
        "–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è, –∫–æ–≥–¥–∞ —Ç–µ–±—è —Å–ø—Ä–æ—Å–∏–ª–∏ *–≤–∏–ª–∫–æ–π –≤ –≥–ª–∞–∑ –∏–ª–∏ –≤ –ø–æ–ø—É —Ä–∞–∑?*, —Ç—ã –≤—ã–±—Ä–∞–ª –≤—Ç–æ—Ä–æ–µ))",
        "–ú—ã —Å —Ç–≤–æ–∏–º –æ—Ç—Ü–æ–º –º–∞–º—É –µ–±–∞–ª–∏. –û–Ω–∞ —Ç–∞–∫ –ø—Ä–∏—è—Ç–Ω–æ —Å–æ—Å—ë—Ç))",
        "–¢—ã –±–ª—è—Ç—å, —Å—ã–Ω —Ñ–µ—Ä–º–µ—Ä–∞, —Ç—ã –∫–∞–∫ —Å –æ—Ç—á–∏–º–æ–º —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞–µ—à—å?",
        "–ú–Ω–µ —Ç–≤–æ–π –ø–∞–ø–∞ —Å–∫–∞–∑–∞–ª, —á—Ç–æ –∫–æ–≥–¥–∞ –æ–Ω–∏ –µ–±–∞–ª–∏—Å—å, —Ç–æ –ø—Ä–µ–∑–∏–∫ –ø–æ—Ä–≤–∞–ª—Å—è))",
        "–ê —á–µ–≥–æ —Ç—ã –µ—â—ë –≤ —Å–µ—Ç–∏? –ú–∞–º–∞ –∂–µ —Å–∫–∞–∑–∞–ª–∞ –≤—ã–∫–ª—é—á–∞—Ç—å",
        "–≠–π —Ç—ã, —à–ª—é—Ö–∞, –ø–æ–ª–∏—Ä–æ–≤–∞—Ç—å —è–π—Ü–∞ –∫–æ–≥–¥–∞ –±—É–¥–µ—à—å?",
        "–ü–∏—Å—é–Ω—á–∏–∫ –µ—â—ë –Ω–µ –¥–æ—Ä–æ—Å –¥–æ —Ç–∞–∫–∏—Ö –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–π",
        "–ö–æ–≥–¥–∞ —Ç—ã —É–∂–µ –≤—Å–ø–æ–º–Ω–∏—à—å, —á—Ç–æ –º–Ω–µ —Ö—É–π —Å–æ—Å–∞–ª?",
        "–¢—ã –º–æ–π —Å–µ–∫—Å —Ä–∞–±, –∞ —è —Ç–≤–æ–π –≤–ª–∞–¥–µ–ª–µ—Ü. –ë—ã—Å—Ç—Ä–æ —Å–æ—Å–∏ –º–Ω–µ —Ö—É–π!",
        "–ñ–¥–∏ —Å–≤–æ–µ–≥–æ –æ—Ç—á–∏–º–∞ –¥–æ–º–∞. –û–Ω —Ö–æ—á–µ—Ç —Ç–µ–±—è –≤—ã–µ–±–∞—Ç—å –≤ —Ä–æ—Ç))",
        "–ü–æ—à—ë–ª –Ω–∞—Ö—É–π —á–µ—Ä–∫–∞—à –µ–±–∞–Ω–Ω—ã–π",
        "–î–∞—É–Ω, –∏–¥–∏ –≤—Å–∫—Ä–æ–π—Å—è",
        "–ê–ª—å—Ç—É—à–∫–∞ –µ–±–∞–Ω–Ω–∞—è, –∏–¥–∏ –¥—Ä–æ—á–∏ –∫-–ø–æ–ø–µ—Ä–∞–º",
        "–ë–ª—è, —è —Ç–≤–æ—é –º–∞—Ç—å –∫–∞–º–∞–∑–æ–º –ø–µ—Ä–µ—Ö—É—è—Ä–∏–ª",
        "—Ç—ã –∞—Ö—É–µ–ª —á–º–æ –µ–±–∞–Ω–æ–µ",
        "–ò–¥–∏ –Ω–∞—Ö—É–π –µ–±–ª–æ —Ç—É–ø–æ–µ —Ç–µ–±—è –≤ –ø–æ–¥–≤–æ—Ä–æ—Ç–Ω–µ —è –∏–∑–Ω–∞—Å–∏–ª—É—é",
        "–¢–í–û–ô –ü–ò–ó–î–ï–ñ –ë–ï–ó –î–û–ö–ê–ó–ê–¢–ï–õ–¨–°–¢–í –ù–ï –ò–ú–ï–ï–¢ –í–ï–°–ê",
        "–ü–û–®–Å–õ –ù–ê–•–£–ô –°–´–ù –®–õ–Æ–•–ò. –¢–´ –ö–¢–û –¢–ê–ö–û–ô –ë–õ–Ø–¢–¨ –ß–¢–û–ë–´ –ü–ò–°–ê–¢–¨ –ü–†–û –°–í–û–Æ –ú–ê–¢–¨? –û–ù–ê –ï–ë–ê–ù–ù–ê–Ø –®–õ–Æ–•–ê, –ò –í–°–Å –≠–¢–û –ó–ù–ê–Æ–¢",
        "–¢–í–û–Ø –ú–ê–¢–¨ –ò –û–¢–ï–¶ –ü–†–û–°–ò–õ–ò –ü–ï–†–ï–î–ê–¢–¨ –ß–¢–û –¢–´ –ï–ë–ê–ù–ê–¢",
        "–í–´ –í–°–ï –ö–û–ù–ß–ï–ù–ù–´–ï –î–û–õ–ë–û–ï–ë–´",
        "–ø–æ–¥–∫–∏–¥—ã—à –µ–±–∞–Ω—ã–π –Ω–∞–≤–µ—Ä–Ω–∏ –≥–æ–≤–Ω–∏—â–∞ –¥–∞ –ø–æ–±–æ–ª—å—à–µ",
        "–ø–æ—à–ª–∞ –Ω–∞—Ö—É–π –∂–µ–Ω—â–∏–Ω–∞ –µ–±–∞–Ω–∞—è —Å–¥–æ—Ö–Ω–∏ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É —É–µ–±–∞–Ω",
        "—Ä–æ—Ç –∑–∞–∫—Ä–æ–π –≥–Ω–∏–¥–∞ –æ–±–æ—Å—Å–∞–Ω–∞—è –ø—Ä–æ –ø–ª–∞—á –∏ —Ö—É–∏ —Ç–æ–ª—å–∫–æ –∏ –≥–æ–≤–æ—Ä–∏—Ç —É–µ–±–∞–Ω –∫–æ–Ω—á–µ–Ω—ã–π",
        "–±–ª—è —Ç—ã –∫–∞–∫ –±—É–¥—Ç–æ —É –∑–µ—Ä–∫–∞–ª–∞ —Å—Ç–æ–∏—à—å - —Ç—É–ø–æ —Å—Ç—Ä–µ–ª–∫–∏ –º–µ—Ç–∞–µ—à—å",
        "–í —Å–æ—Ü–∏—É–º–µ –º–µ–Ω—è —Å—á–∏—Ç–∞—é—Ç –≥–µ–Ω–∏–µ–º –∞ —Ç–µ–±—è –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞—é—Ç –∫–∞–∫ –∑–∞ –ª–æ—Ö–∞ –∫–æ—Ç–æ—Ä—ã–π –¥–æ–µ–¥–∞–µ—Ç –∑–∞ –º–Ω–æ–π",
        "–ò–¥–∏ –Ω–∞—Ö—É–π –º–æ—ë –ø–æ–∫–æ–ª–µ–Ω–∏–µ —Å–∞–º–æ–µ —É–º–Ω–æ–µ –∞ —Ç—ã —Ç—É–ø–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≤–∏–¥—É–π –º–æ–ª—á–∏",
        "–ò–¥–∏ –Ω–∞—Ö—É–π –∞–ª—å—Ç—É—à–∫–∞ –∏–¥–∏ –±–ª—è—Ç—å —É–º–æ–π—Å—è",
        "–¢—ã —Ä–∞–± —ç—Ç–æ–≥–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞ —Ç–µ–ø–µ—Ä—å –∂–∏–≤–æ –∑–∞ —Ä–∞–±–æ—Ç—É",
        "–ü–æ—Å–º–µ—è–ª–∏—Å—å –∞ —Ç–µ–ø–µ—Ä—å –≤ –ø–æ–ª–µ –ø–∞—Ö–∞—Ç—å –±—É–¥–µ—à—å",
        "–£ —Ç–µ–±—è –Ω–µ—Ç —Ö—É—è —Ç—ã —Ä–∞–± —Ç—É–ø–æ–π —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ —Ç–µ–±–µ –æ–±—ä—è—Å–Ω—è—Ç—å —á–º–æ –µ–±–ª–∏–≤–æ–µ",
        "–ú–Ω–µ–Ω–∏–µ —Ç–∞–¥–∂–∏–∫–∞ –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è",
        "–ê—Ö–∞—Ö—Ö–∞–∞—Ö –µ–±–∞—Ç—å —Ç—ã –Ω–∏—â –∫–ª–æ—É–Ω —á–º–æ –µ–±–ª–∏–≤–æ–µ –Ω–∞–¥–µ—é—Å—å –≤ –ø–æ–¥–≤–æ—Ä–æ—Ç–Ω–µ —Ç–µ–±—è —Ç–∞–¥–∂–∏–∫–∏ –≤—ã–µ–±—É—Ç",
        "—á–º–æ –º–æ–ª—á–∞—Ç—å –Ω–∞—Ö—É–π"
    ]

@app.on_message(filters.command("ab", prefixes="."))
def autobull_command(client, message):
    replied_user_id = message.reply_to_message.from_user.id

    with open("ab.txt", "a") as file:
        file.write(str(replied_user_id) + "\n")

    random_variant = random.choice(ab_variants)
    message.reply_text("**–ê–≤—Ç–æ–±—É–ª–ª –≤–∫–ª—é—á–µ–Ω.**")

@app.on_message(filters.command("delab", prefixes="."))
def delab_command(client, message):
    user_id_to_remove = message.reply_to_message.from_user.id

    with open("ab.txt", "r") as file:
        user_ids = file.read().splitlines()

    user_ids = [user_id for user_id in user_ids if user_id != str(user_id_to_remove)]

    with open("ab.txt", "w") as file:
        file.write("\n".join(user_ids))

    message.reply_text("**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–≤—Ç–æ–±—É–ª–ª.**")


@app.on_message(filters.command("who", prefixes="."))
def who_command(client, message):
    args = message.text.split()[1:]

    if args:
        members_count = client.get_chat_members_count(message.chat.id)

        members = client.get_chat_members(message.chat.id, limit=members_count)

        random_user = random.choice(list(members)).user

        response = f"@{random_user.username} {' '.join(args)}"
    else:
        response = "–ù–µ–≤–µ—Ä–Ω–æ –Ω–∞–ø–∏—Å–∞–Ω–æ. –ü—Ä–∏–º–µ—Ä:\n`.who –º–∏–ª—ã–π`"

    client.send_message(message.chat.id, response)


@app.on_message()
def handle_messages(client, message):
    with open("ab.txt", "r") as file:
        user_ids = file.read().splitlines()

    if str(message.from_user.id) in user_ids:
        random_variant = random.choice(ab_variants)
        message.reply_text(random_variant)

app.run()
